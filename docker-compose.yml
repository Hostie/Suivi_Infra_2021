version: '3'
 
services:
 traefik:
    restart: unless-stopped
    image: traefik:v2.0.2
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=http"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - net 


 elasticsearch:
   build : ./elasticsearch
   container_name: elasticsearch
   environment:
     - "discovery.type=single-node"
   networks:
     - net
   volumes:
     - esdata:/usr/share/elasticsearch/data
 
 kibana:
   build : ./kibana
   container_name: kibana
   environment:
     SERVER_NAME : kibana
     ELASTICSEARCH_URL : http://elasticsearch:9200
   labels:
     - "traefik.http.routers.blog.tls=true"  
   networks:
     - net

 metricbeat:
   build: .
   restart: unless-stopped
   pid: host
   volumes:
     - ./metricbeat.yml:/metricbeat/metricbeat.yml
   depends_on:
     - elasticsearch
   environment:
    - ELASTICSEARCH_URL=http://elasticsearch:9200
 
 reverse-proxy-https-helper:
   image: alpine
   command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
   volumes:
     - certs:/etc/ssl/traefik

 app:
    container_name: docker-node-mongo
    restart: unless-stopped
    build: .
    ports:
      - '3000:3000'
    external_links:
      - mongo
   
 mongo:
    container_name: mongo
    image: mongo
    ports:
      - '27017:27017'
    
 
volumes:
   esdata:
     driver: local
   metricbeat-data01:
     driver: local
   certs:

#Réseau commun à tous les conteneurs
networks:
   net: